name: Update Config
on:
  workflow_dispatch:
    inputs:
      patches:
        type: string
        required: true
        description: JSON string array of RFC6902 patches with an additional environment key.
  workflow_call:
    inputs:
      patches:
        type: string
        required: true
        description: JSON string array of RFC6902 patches with an additional environment key.

jobs:
  update:
    name: Patch Configs
    runs-on: ubuntu-latest
    env:
      REPO_PATH: .crisiscleanup-configs
    steps:
      # ensure we checkout the configs repo during a workflow_call event.
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          token: ${{ secrets.GH_CONFIGS_RO_PAT }}
          repository: CrisisCleanup/configs
          ref: main
          path: ${{ env.REPO_PATH }}
          clean: false

      - name: Prepare Patches
        id: prepare
        env:
          PATCHES_INPUT: ${{ inputs.patches }}
          PATH_PREFIX: ${{ env.REPO_PATH }}/api/
        run: |
          # group input patches by file to patches
          printf -v query 'group_by(.environment) | map({key: ("%s" + .[0].environment + ".json"), value: map({path: .path, value: .value, op: .op})}) | from_entries' "$PATH_PREFIX"
          echo "Query: $query" 
          results=$(jq -c "$query" <<<"$PATCHES_INPUT")
          echo "Results: $results"
          echo "patches-by-file=$results" >> $GITHUB_OUTPUT
          # create a commit message
          echo "Creating commit message..."
          changes=$(jq -r 'map("\(.environment)@\(.path)") | join(", ")' <<<"$PATCHES_INPUT")
          commit_message="chore(patch): ${changes}"
          echo "Commit Message: ${commit_message}"
          echo "commit-msg=$commit_message" >> $GITHUB_OUTPUT

      - name: Apply Patches
        uses: CrisisCleanup/configs/.github/actions/json-patch@main
        with:
          patches: ${{ steps.prepare.outputs.patches-by-file }}

      - name: Authenticate Bot
        id: auth
        uses: CrisisCleanup/crisiscleanup-3-api/.github/actions/auth-gha-app@master
        with:
          app_id: ${{ secrets.CCU_BOT_APP_ID }}
          install_id: ${{ secrets.CCU_BOT_INSTALL_ID }}
          private_key: ${{ secrets.CCU_BOT_PRIVATE_KEY }}
          authenticate: "true"

      - name: Commit changes.
        working-directory: ${{ env.REPO_PATH }}
        run: |
          git config --global user.name "${{ steps.auth.outputs.name }}"
          git config --global user.email "${{ steps.auth.outputs.email }}"
          git add api
          git commit -m "${{ steps.prepare.outputs.commit-msg }}" || true

      - name: Push Changes
        uses: ad-m/github-push-action@c361e2bb0747df3110bdbe051b209b40766670ec
        with:
          github_token: ${{ steps.auth.outputs.token }}
          branch: main
          repository: CrisisCleanup/configs
          directory: ${{ env.REPO_PATH }}

      - name: Cleanup
        if: always()
        continue-on-error: true
        run: rm -rf ${{ env.REPO_PATH }} || true
